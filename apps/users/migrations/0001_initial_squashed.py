# Generated by Django 3.0.9 on 2020-08-21 01:56
import uuid

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import django_fsm
import imagekit.models.fields
import model_utils.fields

import apps.users.models.users
import apps.users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('cities_light', '0008_city_timezone'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('first_name', models.CharField(max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(max_length=150, verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date joined')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('avatar', imagekit.models.fields.ProcessedImageField(null=True, upload_to=apps.users.models.users.upload_user_avatar_to)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'AppUser',
                'verbose_name_plural': 'AppUsers',
            },
        ),
        migrations.CreateModel(
            name='FeeKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Fee Kind',
                'verbose_name_plural': 'Fee Kinds',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Speciality',
                'verbose_name_plural': 'Specialities',
            },
        ),
        migrations.AddField(
            model_name='appuser',
            name='specialities',
            field=models.ManyToManyField(related_name='users', to='users.Speciality', verbose_name='Specialities'),
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'University',
                'verbose_name_plural': 'Universities',
            },
        ),
        migrations.CreateModel(
            name='Attorney',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='attorney', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('featured', models.BooleanField(default=False, verbose_name='Is featured')),
                ('is_disciplined', models.BooleanField(default=False, help_text='Have attorney ever been disciplined (suspended, censured or otherwise disciplined/disqualified as member of legal or any other profession)', verbose_name='Is disciplined')),
                ('practice_description', models.TextField(blank=True, help_text="Description of attorney's legal practice (1000 characters)", max_length=1000, null=True, verbose_name='Practice description')),
                ('have_speciality', models.BooleanField(default=True, help_text='Does attorney have speciality', verbose_name='Have speciality')),
                ('speciality_time', models.PositiveIntegerField(blank=True, help_text='Numbers of years practiced in specialized area', null=True, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Speciality time')),
                ('speciality_matters_count', models.PositiveIntegerField(blank=True, help_text='Approximate number of matters in last 5 years, handled by attorney in specialized area', null=True, verbose_name='Speciality matters count')),
                ('fee_rate', models.DecimalField(decimal_places=2, help_text='How much attorney take per hour', max_digits=10, verbose_name='Fee rate')),
                ('extra_info', models.TextField(blank=True, help_text='Extra information about attorney', null=True, verbose_name='Extra information')),
                ('charity_organizations', models.TextField(blank=True, help_text='Name of any volunteer or charitable organizations attorney workwith or are member of', null=True, verbose_name='Charity organizations')),
                ('fee_kinds', models.ManyToManyField(related_name='attorneys', to='users.FeeKind', verbose_name='FeeKinds')),
                ('verification_status', django_fsm.FSMField(choices=[('not_verified', 'Not verified'), ('approved', 'Approved'), ('denied', 'Denied')], default='not_verified', max_length=20, verbose_name='Verification_status')),
                ('followers', models.ManyToManyField(related_name='followed_attorneys', to=settings.AUTH_USER_MODEL, verbose_name='Followers')),
                ('phone', models.CharField(help_text="Attorney's phone number", max_length=128, verbose_name='Phone')),
                ('practice_jurisdictions', models.ManyToManyField(help_text='State(s) or federal jurisdiction attorney are licensed or authorised to practice in', related_name='attorneys', to='cities_light.Region', verbose_name='Practice jurisdictions')),
                ('firm_location', django.contrib.gis.db.models.fields.PointField(help_text="Attorney's location coordinates", srid=4326, verbose_name='Location')),
                ('firm_location_city', models.CharField(help_text='Name of city, where attorney is located', max_length=255, verbose_name='City')),
                ('firm_location_data', django.contrib.postgres.fields.jsonb.JSONField(help_text='All information about location from Google stored as JSON', verbose_name='Location data')),
                ('firm_location_state', models.CharField(help_text='Name of state, where attorney is located', max_length=255, verbose_name='State')),
                ('firm_place_id', models.CharField(blank=True, help_text='Google identifier of place', max_length=255, null=True, verbose_name='Place ID')),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), default=list, help_text='Based on keywords, opportunities are formed for attorney', size=None, verbose_name='Keywords')),
                ('years_of_experience', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='How long has attorney been practicing')),
                ('license_info', models.TextField(help_text="Attorney's state, agency, date of admission and bar membership number", verbose_name='Licence info')),
                ('sponsored', models.BooleanField(default=False, help_text='Is attorney sponsored Jus-Law', verbose_name='Is sponsored')),
                ('sponsor_link', models.URLField(blank=True, help_text='Link to the sponsor of Jus-law', null=True, verbose_name='Sponsor link')),
            ],
            options={
                'verbose_name': 'Attorney',
                'verbose_name_plural': 'Attorneys',
            },
        ),
        migrations.CreateModel(
            name='AttorneyEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('year', models.IntegerField(validators=[apps.users.validators.validate_activity_year], verbose_name='Year')),
                ('attorney', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='education', to='users.Attorney', verbose_name='Attorney')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attorney_education', to='users.University', verbose_name='University')),
            ],
            options={
                'verbose_name': "Attorney's education",
                'verbose_name_plural': "Attorneys' education",
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Primary key of invitation, used to make unique invitation link', primary_key=True, serialize=False, verbose_name='UUID')),
                ('first_name', models.CharField(max_length=30, verbose_name='First name')),
                ('last_name', models.CharField(max_length=150, verbose_name='Last name')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail address')),
                ('message', models.TextField(help_text='Message of invitation', verbose_name='Message')),
                ('sent', models.DateTimeField(blank=True, help_text='Time when invitation was sent', null=True, verbose_name='Sent at')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invitations', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sent_invitations', to=settings.AUTH_USER_MODEL, verbose_name='Inviter')),
                ('help_description', models.CharField(blank=True, help_text='What client is looking for help with', max_length=255, null=True, verbose_name='Needed help description')),
                ('phone', models.CharField(blank=True, help_text="Attorney's phone number", max_length=128, null=True, verbose_name='Phone')),
                ('specialities', models.ManyToManyField(related_name='invites', to='users.Speciality', verbose_name='Specialities')),
                ('type', models.CharField(choices=[('imported', 'Imported'), ('invited_by_user', 'Invited by user')], default='invited_by_user', max_length=20, verbose_name='Type of invitation')),
                ('user_type', models.CharField(choices=[('client', 'Client'), ('attorney', 'Attorney')], default='client', max_length=10, verbose_name='Type of invited user')),
                ('client_type', models.CharField(choices=[('individual', 'Individual'), ('firm', 'Firm')], default='individual', help_text='Type of client', max_length=50, verbose_name='Type of client')),
                ('organization_name', models.CharField(blank=True, help_text='Name of organization', max_length=255, null=True, verbose_name='Name of organization')),
                ('title', models.CharField(blank=True, help_text='Title', max_length=256, null=True, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Invitation',
                'verbose_name_plural': 'Invitations',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, related_name='client', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('help_description', models.CharField(blank=True, help_text='What client is looking for help with', max_length=255, null=True, verbose_name='Needed help description')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients_state', to='cities_light.Region', verbose_name="Client's location(US state)")),
                ('client_type', models.CharField(choices=[('individual', 'Individual'), ('firm', 'Firm')], default='individual', help_text='Type of client', max_length=50, verbose_name='Type of client')),
                ('organization_name', models.CharField(blank=True, help_text='Name of organization', max_length=255, null=True, verbose_name='Name of organization')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='UserStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('tag', models.CharField(choices=[('opportunities', 'Opportunities'), ('active_matter', 'Active matter'), ('active_lead', 'Active lead'), ('converted_lead', 'Converted lead')], help_text='Identifier of statistic', max_length=50, verbose_name='Tag')),
                ('count', models.PositiveIntegerField(default=1, help_text='Count', verbose_name='Count')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User statistics',
                'verbose_name_plural': 'User statistics',
            },
        ),
        migrations.AddIndex(
            model_name='userstatistic',
            index=models.Index(fields=['user', 'created'], name='users_users_user_id_2f83a1_idx'),
        ),
        migrations.CreateModel(
            name='AttorneyRegistrationAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('attachment', models.FileField(help_text='Extra file attached by attorney on registration', max_length=255, upload_to=apps.users.models.attorney_links.upload_registration_attachments_to, verbose_name='Attachment file')),
                ('attorney', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registration_attachments', to='users.Attorney', verbose_name='Attorney')),
            ],
            options={
                'verbose_name': "Attorney's registration attachment",
                'verbose_name_plural': "Attorney's registration attachments",
            },
        ),
    ]
