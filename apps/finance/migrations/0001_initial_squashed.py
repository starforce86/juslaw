# Generated by Django 3.0.9 on 2020-08-21 01:58
import uuid

import django.contrib.postgres.fields.jsonb
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import django_fsm
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0001_initial_squashed'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('djstripe', '0006_2_3'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlanProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Plan',
                'verbose_name_plural': 'Plans',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('djstripe.plan',),
        ),
        migrations.CreateModel(
            name='ProductProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('djstripe.product',),
        ),
        migrations.CreateModel(
            name='SubscriptionProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('djstripe.subscription',),
        ),
        migrations.CreateModel(
            name='CustomerProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('djstripe.customer',),
        ),
        migrations.CreateModel(
            name='AccountProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('djstripe.account',),
        ),
        migrations.CreateModel(
            name='WebhookEventTriggerProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('djstripe.webhookeventtrigger',),
        ),
        migrations.CreateModel(
            name='AccountProxyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('capabilities', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Represents privileges for app provided by user to connected account', verbose_name='Capabilities')),
                ('external_accounts', django.contrib.postgres.fields.jsonb.JSONField(default=list, help_text="Represents payouts info of user's connected account", verbose_name='External accounts')),
                ('account', models.OneToOneField(blank=True, help_text='Represents related to stripe account for direct deposits', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='info', to='finance.AccountProxy', verbose_name='Current connected account')),
            ],
            options={
                'verbose_name': 'Account Proxy Info',
                'verbose_name_plural': 'Accounts Proxies Info',
            },
        ),
        migrations.CreateModel(
            name='FinanceProfile',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='finance_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('initial_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.PlanProxy', to_field='id')),
                ('was_promo_period_provided', models.BooleanField(default=False, verbose_name='Was promo period provided')),
                ('not_verified_email_sent', models.DateTimeField(blank=True, help_text='Datetime when deposit account `not verified` email was sent for the last time', null=True, verbose_name='Not verified email sent datetime')),
                ('verified_email_sent', models.DateTimeField(blank=True, help_text='Datetime when deposit account `verified` email was sent for the last time', null=True, verbose_name='Verified email sent datetime')),
                ('deposit_account', models.OneToOneField(blank=True, help_text='Represents related to stripe account for direct deposits', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finance_profile', to='finance.AccountProxy', verbose_name='Current deposit account')),
            ],
            options={
                'verbose_name': 'Finance Profile',
                'verbose_name_plural': 'Finance Profiles',
            },
        ),
        migrations.CreateModel(
            name='PaymentIntentProxy',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('djstripe.paymentintent', models.Model),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('payment_object_id', models.PositiveIntegerField(db_index=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount of money that would be paid in USD', max_digits=10, verbose_name='Amount')),
                ('application_fee_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Amount of money that would be taken from amount to the owner of app', max_digits=10, verbose_name='Application fee amount')),
                ('description', models.CharField(help_text='Description of payment', max_length=250, verbose_name='Description')),
                ('status', django_fsm.FSMField(choices=[('in_progress', 'In progress'), ('failed', 'Failed'), ('canceled', 'Canceled'), ('succeeded', 'Succeeded')], default='in_progress', help_text='Status of payment', max_length=30, verbose_name='Status')),
                ('idempotency_key', models.UUIDField(default=uuid.uuid4, help_text='Idempotency key, used to avoid creating duplicated data', unique=True, verbose_name='Idempotency key')),
                ('payer', models.ForeignKey(help_text='Link to the user who made payment', on_delete=django.db.models.deletion.PROTECT, related_name='made_payments', to=settings.AUTH_USER_MODEL, verbose_name='Payer')),
                ('payment_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contenttypes.ContentType')),
                ('recipient', models.ForeignKey(blank=True, help_text='Link to the user to whom payment was made', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='Recipient')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'unique_together': {('payment_content_type', 'payment_object_id')},
            },
        ),
    ]
